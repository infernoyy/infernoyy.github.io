<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[2017/11/19 第一个Vue应用——————音乐播放器]]></title>
      <url>/2017/11/19/2017_11_19/</url>
      <content type="html"><![CDATA[<p>深入学习Vue 。。。</p>
<a id="more"></a>
<hr>
<h1 id="Vue-音乐播放器"><a href="#Vue-音乐播放器" class="headerlink" title="Vue 音乐播放器"></a>Vue 音乐播放器</h1><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><h3 id="Git-、Node-、Npm安装（自行百度）"><a href="#Git-、Node-、Npm安装（自行百度）" class="headerlink" title="Git 、Node 、Npm安装（自行百度）"></a>Git 、Node 、Npm安装（自行百度）</h3><h3 id="Clone-it"><a href="#Clone-it" class="headerlink" title="Clone it"></a>Clone it</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/zce/music-player.git -b vue --depth 1</div><div class="line">$ <span class="built_in">cd</span> music-player</div></pre></td></tr></table></figure>
<p>基本页面（切图）：<a href="https://github.com/zce/music-player-pages">https://github.com/zce/music-player-pages</a></p>
<h3 id="Run-it"><a href="#Run-it" class="headerlink" title="Run it"></a>Run it</h3><h4 id="Install-Dependencies"><a href="#Install-Dependencies" class="headerlink" title="Install Dependencies"></a>Install Dependencies</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure>
<h4 id="Server-Side"><a href="#Server-Side" class="headerlink" title="Server Side"></a>Server Side</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm run serve</div></pre></td></tr></table></figure>
<p>visit <a href="http://localhost:2080/music/list" target="_blank" rel="external">http://localhost:2080/music/list</a> in browser</p>
<h4 id="Client-Side"><a href="#Client-Side" class="headerlink" title="Client Side"></a>Client Side</h4><p>Open another Terminal and run:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm run client</div></pre></td></tr></table></figure>
<p>visit <a href="http://localhost:3000" target="_blank" rel="external">http://localhost:3000</a> in browser</p>
<hr>
<h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h2><p>app.js接口 、 index.html程序入口主页面<br>1、index.html  引入静态页面，引入vue.js、vue-router、vue-resource.js以及app.js<br>2、应用程序App分为三个页面：首页Home、歌曲详情页Songs、播放页Player<br>3、在app.js搭建基本路由框架（路由的重定向）<br>4、大型应用template：通过webpack的vue文件<br>    本项目定义模板<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script id=<span class="string">""</span> type=<span class="string">"text/x-template"</span>&gt;<span class="xml"><span class="comment">&lt;!--这里内容不会显示到页面上--&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="comment">//在组件内</span></div><div class="line">template：<span class="built_in">document</span>.getElementById(<span class="string">""</span>).innerHTML;</div></pre></td></tr></table></figure></p>
<p>5、歌曲列表渲染，json假数据代替，data、methods数据转换<br>6、resource的ajax请求、jsonp跨域获取真实数据</p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[2017/11/18]]></title>
      <url>/2017/11/18/2017_11_18/</url>
      <content type="html"><![CDATA[<p>很长时间没写。。。<br><a id="more"></a></p>
<hr>
<p>夯实基础ing！</p>
<h2 id="ajax-优势与弊端"><a href="#ajax-优势与弊端" class="headerlink" title="ajax 优势与弊端"></a>ajax 优势与弊端</h2><p>Ajax优缺点：</p>
<p>优点：</p>
<p>1.无刷新更新数据</p>
<p>Ajax最大的优点就是能在不刷新整个页面的情况下维持与服务器通信</p>
<p>2.异步与服务器通信</p>
<p>使用异步的方式与服务器通信，不打断用户的操作</p>
<p>3.前端与后端负载均衡</p>
<p>将一些后端的工作移到前端，减少服务器与带宽的负担</p>
<p>4.基于规范被广泛支持</p>
<p>不需要下载浏览器插件或者小程序，但需要客户允许JavaScript在浏览器上执行。</p>
<p>5.界面与应用分离</p>
<p>Ajax使得界面与应用分离，也就是数据与呈现分离</p>
<p>缺点：</p>
<p>1.Ajax干掉了Back与History功能，即对浏览器机制的破坏</p>
<p>在动态更新页面的情况下，用户无法回到前一页的页面状态，因为浏览器仅能记忆历史纪录中的静态页面</p>
<p>2.安全问题</p>
<p>AJAX技术给用户带来很好的用户体验的同时也对IT企业带来了新的安全威胁，Ajax技术就如同对企业数据建立了一个直接通道。这使得开发者在不经意间会暴露比以前更多的数据和服务器逻辑。</p>
<p>3.对搜索引擎支持较弱</p>
<p>4.破坏程序的异常处理机制</p>
<p>5.违背URL与资源定位的初衷</p>
<p>6.不能很好地支持移动设备</p>
<p>7.客户端肥大，太多客户段代码造成开发上的成本</p>
<hr>
<h2 id="解决国内NPM安装依赖速度慢问题"><a href="#解决国内NPM安装依赖速度慢问题" class="headerlink" title="解决国内NPM安装依赖速度慢问题"></a>解决国内NPM安装依赖速度慢问题</h2><p>使用NPM（Node.js包管理工具）安装依赖时速度特别慢，为了安装Express，执行命令后两个多小时都没安装成功，最后只能取消安装，笔者20M带宽，应该不是我网络的原因，后来在网上找了好久才找到一种最佳解决办法，在安装时可以手动指定从哪个镜像服务器获取资源，我们可以使用阿里巴巴在国内的镜像服务器，命令如下：</p>
<figure class="highlight tcl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -gd express --<span class="keyword">registry</span>=<span class="keyword">http</span>://<span class="keyword">registry</span>.npm.taobao.org</div></pre></td></tr></table></figure>
<p>只需要使用–registry参数指定镜像服务器地址，为了避免每次安装都需要–registry参数，可以使用如下命令进行永久设置：</p>
<figure class="highlight tcl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm config <span class="keyword">set</span> <span class="keyword">registry</span> <span class="keyword">http</span>://<span class="keyword">registry</span>.npm.taobao.org</div></pre></td></tr></table></figure>
<p>换了国内镜像，安装速度就很快了</p>
<hr>
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[2017/10/18 知识补足]]></title>
      <url>/2017/10/18/2017_10_18/</url>
      <content type="html"><![CDATA[<p>最近，累，倒地不起。<br><a id="more"></a></p>
<hr>
<p>最近面试太多，没时间写博客，白天到处跑，晚上立刻倒。。。不过，充实！</p>
<h2 id="近一个星期前端多次面试"><a href="#近一个星期前端多次面试" class="headerlink" title="近一个星期前端多次面试"></a>近一个星期前端多次面试</h2><p>一星期内大大小小的面试，有单面、群面、etc</p>
<p>知识面不足和面试经验不足应该是主要pass原因</p>
<p>不过回来补足知识点还算及时，多多面试习惯就好！</p>
<hr>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="前端性能优化：DOM操作性能优化建议"><a href="#前端性能优化：DOM操作性能优化建议" class="headerlink" title="前端性能优化：DOM操作性能优化建议"></a>前端性能优化：DOM操作性能优化建议</h3><p>1查找元素的优化<br>2改变DOM，包括添加，修改，删除DOM<br>3改变DOM的样式类等<br>4批量修改DOM<br>5减少iframe<br>6样式放在header中，脚本放在关闭标签之前</p>
<h3 id="get-post-区别"><a href="#get-post-区别" class="headerlink" title="get post 区别"></a>get post 区别</h3><p>区别如下</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">GET</th>
<th style="text-align:center">POST</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">后退按钮/刷新</td>
<td style="text-align:center">无害</td>
<td style="text-align:center">数据会被重新提交（浏览器应该告知用户数据会被重新提交）。</td>
</tr>
<tr>
<td style="text-align:center">书签</td>
<td style="text-align:center">可收藏为书签</td>
<td style="text-align:center">不可收藏为书签</td>
</tr>
<tr>
<td style="text-align:center">缓存</td>
<td style="text-align:center">能被缓存</td>
<td style="text-align:center">不能缓存</td>
</tr>
<tr>
<td style="text-align:center">编码类型</td>
<td style="text-align:center">application/x-www-form-urlencoded</td>
<td style="text-align:center">application/x-www-form-urlencoded 或 multipart/form-data。为二进制数据使用多重编码。</td>
</tr>
<tr>
<td style="text-align:center">历史</td>
<td style="text-align:center">参数保留在浏览器历史中。</td>
<td style="text-align:center">参数不会保存在浏览器历史中。</td>
</tr>
<tr>
<td style="text-align:center">对数据长度的限制</td>
<td style="text-align:center">是的。当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大长度是 2048 个字符）。</td>
<td style="text-align:center">无限制。</td>
</tr>
<tr>
<td style="text-align:center">对数据类型的限制</td>
<td style="text-align:center">只允许 ASCII 字符。</td>
<td style="text-align:center">没有限制。也允许二进制数据。</td>
</tr>
<tr>
<td style="text-align:center">安全性</td>
<td style="text-align:center">与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。<br>在发送密码或其他敏感信息时绝不要使用 GET ！</td>
<td style="text-align:center">POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中。</td>
</tr>
<tr>
<td style="text-align:center">可见性</td>
<td style="text-align:center">数据在 URL 中对所有人都是可见的。</td>
<td style="text-align:center">数据不会显示在 URL 中。</td>
</tr>
</tbody>
</table>
<h3 id="原生ajax"><a href="#原生ajax" class="headerlink" title="原生ajax"></a>原生ajax</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">		　　<span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="actionscript">			　　<span class="comment">//1:获取a节点，并对其添加onclick（）相应函数  </span></span></div><div class="line"><span class="javascript">			　　<span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="actionscript">				　　<span class="comment">// 2:创建一个XMLHttpRequest对象  </span></span></div><div class="line"><span class="actionscript">			　　　　<span class="keyword">var</span> request = <span class="keyword">new</span> XMLHttpRequest();</span></div><div class="line"><span class="actionscript">			　　　　<span class="comment">// 3:准备发送请求的数据:url  </span></span></div><div class="line"><span class="actionscript">			　　　　<span class="keyword">var</span> url = <span class="keyword">this</span>.href;</span></div><div class="line"><span class="actionscript">			　　　　<span class="comment">//4:调用XMLHttpRequest对象的open方法  </span></span></div><div class="line"><span class="actionscript">			　　　　request.open(<span class="string">"GET"</span>, url);</span></div><div class="line"><span class="actionscript">			　　　　<span class="comment">//5:调用XMLHttpRequest对象的send方法  </span></span></div><div class="line"><span class="actionscript">			　　　　request.send(<span class="literal">null</span>);</span></div><div class="line"><span class="actionscript">			　　　　<span class="comment">//6:为XMLHttpRequest对象添加Onreadystatechange响应函数  </span></span></div><div class="line"><span class="actionscript">			　　　　request.onreadystatechange = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="actionscript">			　　　　　　<span class="comment">//判断响应是否完成:XMLHttpRequest的readyState的属性值为4的时候  </span></span></div><div class="line"><span class="actionscript">			　　　　　　<span class="comment">// alert(request.readyState);  </span></span></div><div class="line"><span class="actionscript">			　　　　　　<span class="keyword">if</span>(request.readyState == <span class="number">4</span>) &#123;</span></div><div class="line"><span class="actionscript">				　　　　　　<span class="comment">// 判断响应是否可用，XMLHttpRequest的status的属性值为200的时候  </span></span></div><div class="line"><span class="actionscript">　　　　　　　　　          <span class="keyword">if</span>(request.status == <span class="number">200</span> || request == <span class="number">304</span>)&#123;</span></div><div class="line"><span class="actionscript">		　　　　　　　　　　	<span class="comment">//8:打印响应结果  </span></span></div><div class="line"><span class="undefined">		　　　　　　　　　　	alert(request.responseText);</span></div><div class="line"><span class="undefined">			　　　　　　　　&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">			　　　　　　&#125;</span></div><div class="line"><span class="undefined">			　　　　&#125;</span></div><div class="line"><span class="actionscript">				　　<span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//保证不会调转啊，取消点击的默认行为  </span></span></div><div class="line"><span class="undefined">			　　&#125;;</span></div><div class="line"><span class="undefined">		&#125;</span></div><div class="line"><span class="undefined">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"helloAjax.txt"</span>&gt;</span>helloAjax<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ajax-options-参数"><a href="#ajax-options-参数" class="headerlink" title="$.ajax( options )参数"></a>$.ajax( options )参数</h3><p><a href="http://www.w3school.com.cn/jquery/ajax_ajax.asp" target="_blank" rel="external">$.ajax( options )参数</a></p>
<h3 id="html以及css细节用法"><a href="#html以及css细节用法" class="headerlink" title="html以及css细节用法"></a>html以及css细节用法</h3><p>多看书多动手。</p>
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[2017/10/10 面试小结]]></title>
      <url>/2017/10/10/2017_10_10/</url>
      <content type="html"><![CDATA[<p>人生第一次面试<br>感受颇多<br><a id="more"></a></p>
<hr>
<h2 id="前端面试"><a href="#前端面试" class="headerlink" title="前端面试"></a>前端面试</h2><p>今天参加上海某一家公司的招聘会，感触很深。</p>
<p>早上的笔试，后而收到面试通知。</p>
<p>先说说早上的笔试吧，一个小时的宣讲会，之后四十分钟的笔试。过于简单基础，实际用了二十分钟。收获就是：基础不牢，记忆不深，动手不多。</p>
<p>然后在下午的面试中，面试官问题涉及面比较广泛，更是加深早上的问题。</p>
<p>所以之后戒浮戒躁，还是抓好基础，从基础走起。</p>
<hr>
<!-- [今天面试细节问题补足](https://infernoyy.github.io/study/2017_10_10.md) -->
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><h3 id="田馥甄的《还是要幸福》"><a href="#田馥甄的《还是要幸福》" class="headerlink" title="田馥甄的《还是要幸福》"></a>田馥甄的《还是要幸福》</h3><p>总会有些歌有感触。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=25638783&auto=1&height=66"></iframe>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[2017/10/8 补充昨天前端]]></title>
      <url>/2017/10/08/2017_10_8/</url>
      <content type="html"><![CDATA[<p>上传了CV<br><a id="more"></a></p>
<h2 id="国庆最后一天假，滚回学校了！"><a href="#国庆最后一天假，滚回学校了！" class="headerlink" title="国庆最后一天假，滚回学校了！"></a>国庆最后一天假，滚回学校了！</h2><p>在家休息足了也无聊没事干还不如回学校，作息也规律些。</p>
<hr>
<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>补足了昨天写的代码，虽然有点差强人意，但基本功能都出来了，细节效果之后慢慢补就是了。</p>
<p>自定义页面不经过渲染，貌似会影响WOW效果，线下可以线上不行，数天后会补全页面内跳转效果。</p>
<p>红宝书页数过半，还是抓紧看吧。</p>
<p>大四的就业压力还是有点大，Wish lucky！</p>
<hr>
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><h3 id="林俊杰的《崇拜》"><a href="#林俊杰的《崇拜》" class="headerlink" title="林俊杰的《崇拜》"></a>林俊杰的《崇拜》</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=453491018&auto=1&height=66"></iframe>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[2017/10/7 日常]]></title>
      <url>/2017/10/07/2017_10_7/</url>
      <content type="html"><![CDATA[<p>说说日常吧！<br><a id="more"></a></p>
<h2 id="国庆倒数第二天日常"><a href="#国庆倒数第二天日常" class="headerlink" title="国庆倒数第二天日常"></a>国庆倒数第二天日常</h2><p>放假快结束了，后天回学校！</p>
<hr>
<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>在家还是不适合看书，没性子。</p>
<p>不过还是写了点代码，没怎么完善，再过两天再发布在博客上，量有点点多，花的时间还是有些长，主要是个人的简历项目，地址先留着，就这两天吧。</p>
<p>顺带改了下next主题设置，应该好看多了，舒服。</p>
<hr>
<h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>晚饭出去吃了顿，家里不煮饭，学校吃外卖多了不太爱吃外卖回家还得吃，没什么办法。</p>
<p>回家途中打了个照面的路人眼睛发亮(应该不是反光），盯着我挺久（我应该不丑-&gt;_-&gt; ）。。。</p>
<hr>
<h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>最近S7，LPL加油！</p>
<hr>
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><h3 id="没必要和所有人解释你该做什么，活出自己就好！"><a href="#没必要和所有人解释你该做什么，活出自己就好！" class="headerlink" title="没必要和所有人解释你该做什么，活出自己就好！"></a>没必要和所有人解释你该做什么，活出自己就好！</h3>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[开启第一天的博客]]></title>
      <url>/2017/10/05/2017_10_5first/</url>
      <content type="html"><![CDATA[<p>接触前端后，几经周转有了自己的博客 <a href="https://infernoyy.github.io/" target="_blank" rel="external">infernoyy的博客</a>! 算是在前端小白的道路上又迈进了一步. </p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><p>今天不写前端，正好看见markdown，就顺手写一下markdown的语法以便以后更好的记写。</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><ul>
<li>#一级标题  </li>
<li>##二级标题 </li>
<li>###三级标题 </li>
<li>####四级标题 </li>
<li>#####五级标题 </li>
<li>######六级标题  </li>
</ul>
<hr>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">引用的方式：&gt;引用内容</div></pre></td></tr></table></figure>
<hr>
<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><ul>
<li>段落以自然<em>回车</em>作为标记。</li>
</ul>
<hr>
<h2 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h2><ul>
<li>连续输入三个以上的 bash — 添加分隔符。如下</li>
</ul>
<hr>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul>
<li>使用* - +中的任何一个符号加空格就可以创建无序列表，但如我这样的完美主义者可以进一步使用+ -来表现层次关系。</li>
<li>使用数字+点+空格创建有序列表</li>
<li>列表可以嵌套，使用时在嵌套列表前空格，这篇文章的列表使用了嵌套列表。</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">* </span>这是一个无序列表</div><div class="line"><span class="bullet">* </span>这是一个无序列表</div><div class="line"></div><div class="line"><span class="bullet">+ </span>这是一个父无序列表</div><div class="line">  - 这是一个子无序列表</div><div class="line"></div><div class="line"><span class="bullet">1. </span>这是一个有序列表</div><div class="line"><span class="bullet">2. </span>这是一个有序列表</div></pre></td></tr></table></figure>
<hr>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li><p>baidu链接是这样构成的</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>也可以直接用尖括号包含网址的方式<a href="http://www.jianshu.com" target="_blank" rel="external">http://www.jianshu.com</a>来构成链接 <a href="http://www.jianshu.com" target="_blank" rel="external">http://www.jianshu.com</a></p>
</li>
</ul>
<hr>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ul>
<li><p>像构造一个链接一样，只需要在前面加！</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![<span class="string">图片名称</span>](<span class="link">图片地址</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>也可以使用html方式来指定图片大小</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img <span class="attribute">src</span>=<span class="string">"http://xx.png"</span> <span class="attribute">width</span>=<span class="string">"300px"</span> <span class="attribute">height</span>=<span class="string">"240px"</span> <span class="attribute">alt</span>=<span class="string">"xx"</span>&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="builtin-name">print</span>(<span class="string">"这是一个代码段"</span>);</div></pre></td></tr></table></figure>
<hr>
<h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><p>1、<em>倾斜</em><br>2、<strong>加粗</strong><br>3、<strong><em>倾斜加粗</em></strong><br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="strong">*倾斜*</span></div><div class="line">*<span class="strong">*加粗*</span><span class="strong">*</span></div><div class="line"><span class="strong">*</span>*<span class="strong">*倾斜加粗*</span>*<span class="strong">*</span></div></pre></td></tr></table></figure></p>
<hr>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul>
<li>使用-|符号把内容分割为你认为合适的表格样式就好。</li>
<li>使用:符号标识对齐。<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">表头<span class="number">1</span><span class="params">|表头2|</span>表头<span class="number">3</span></div><div class="line"><span class="symbol">:----|</span><span class="symbol">:-----</span><span class="symbol">:|-----</span><span class="symbol">:</span></div><div class="line">左对齐<span class="params">|居中对齐|</span>右对齐</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="END-希望每一天都像今天这么充实而有意义！！"><a href="#END-希望每一天都像今天这么充实而有意义！！" class="headerlink" title="END 希望每一天都像今天这么充实而有意义！！"></a>END 希望每一天都像今天这么充实而有意义！！</h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/10/05/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post.<br> <a id="more"></a><br>Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
